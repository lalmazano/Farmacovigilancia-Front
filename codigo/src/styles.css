@import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@300;400;500;600&display=swap");
@import 'quill/dist/quill.snow.css';
* {
    font-family: Quicksand, Roboto, "Helvetica Neue", sans-serif;
}

html,
body {
    height: 100%;
}

body {
    margin: 0;
}

.page-content {
    margin-top: 2%;
    margin-left: 0.5%;
    margin-right: 0.5%;
    height: 100%;
    overflow: scroll;
    overflow-x: hidden;
}

.full-height {
    height: 100%;
}

.full-width{
    width: 100%;
}

.spacer {
    flex: 1 1 auto;
}

.button-spacer {
    margin-left: 10px;
}

.scale-icon {
    transform: scale(2);
}

.mat-mdc-tooltip {
    font-size: medium;
}


::-webkit-scrollbar {
    width: 5px;
}

::-webkit-scrollbar-track {
    background: transparent;
    border-radius: 5px;
}

::-webkit-scrollbar-thumb {
    background: #a0c33667;
    border-radius: 5px;
}

table
{
  border-top: 1px hidden;
}

table tr
{
  border-left: 1px hidden;
  border-right: 1px hidden;
}

table td
{
  text-align: justify;
  padding-right: 15px !important;
  padding-left: 15px !important;
}


.wrapper {
  width: 100%;
  height: 100%;
}

.overlay {
  position: absolute;
  z-index: 1002;
  background-color: rgba(255, 255, 255, 0.5);
  width: 100%;
  height: 100%;
}

.spinner-wrapper {
  display: flex;
  justify-content: center;
  justify-items: center;
}



/*Estilos para spiner*/

#loader {
  bottom: 0;
  height: 175px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 175px;
}

#loader {
  bottom: 0;
  height: 175px;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 175px;
}

#loader .dot {
  bottom: 0;
  height: 100%;
  left: 0;
  margin: auto;
  position: absolute;
  right: 0;
  top: 0;
  width: 87.5px;
}

#loader .dot::before {
  border-radius: 100%;
  content: "";
  height: 87.5px;
  left: 0;
  position: absolute;
  right: 0;
  top: 0;
  transform: scale(0);
  width: 87.5px;
}

#loader .dot:nth-child(7n+1) {
  transform: rotate(45deg);
}

#loader .dot:nth-child(7n+1)::before {
  animation: 0.8s linear 0.1s normal none infinite running load;
  background: #43a4c9 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+2) {
  transform: rotate(90deg);
}

#loader .dot:nth-child(7n+2)::before {
  animation: 0.8s linear 0.2s normal none infinite running load;
  background: #52a5a0 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+3) {
  transform: rotate(135deg);
}

#loader .dot:nth-child(7n+3)::before {
  animation: 0.8s linear 0.3s normal none infinite running load;
  background: #95bf43 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+4) {
  transform: rotate(180deg);
}

#loader .dot:nth-child(7n+4)::before {
  animation: 0.8s linear 0.4s normal none infinite running load;
  background: #84b85b none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+5) {
  transform: rotate(225deg);
}

#loader .dot:nth-child(7n+5)::before {
  animation: 0.8s linear 0.5s normal none infinite running load;
  background: #70b176 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+6) {
  transform: rotate(270deg);
}

#loader .dot:nth-child(7n+6)::before {
  animation: 0.8s linear 0.6s normal none infinite running load;
  background: #70b176 none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+7) {
  transform: rotate(315deg);
}

#loader .dot:nth-child(7n+7)::before {
  animation: 0.8s linear 0.7s normal none infinite running load;
  background: #7cb36d none repeat scroll 0 0;
}

#loader .dot:nth-child(7n+8) {
  transform: rotate(360deg);
}

#loader .dot:nth-child(7n+8)::before {
  animation: 0.8s linear 0.8s normal none infinite running load;
  background: #89ccb4 none repeat scroll 0 0;
}

#loader .loading {
  background-position: 50% 50%;
  background-repeat: no-repeat;
  bottom: -40px;
  height: 20px;
  left: 0;
  position: absolute;
  right: 0;
  width: 180px;
}

@keyframes load {
  100% {
      opacity: 0;
      transform: scale(1);
  }
}

@keyframes load {
  100% {
      opacity: 0;
      transform: scale(1);
  }
}

.spinner-message {
  text-align: center;
}

/*Termina estilos para spiner*/


:root {
    --dfBackgroundColor: #ffffff;
    --dfBackgroundSize: 22px;
    --dfBackgroundImage: none; /*linear-gradient(to right, rgba(0, 0, 0, 0.22) 1px, transparent 1px), linear-gradient(to bottom, rgba(0, 0, 0, 0.22) 1px, transparent 1px);*/
  
    --dfNodeType: flex;
    --dfNodeTypeFloat: none;
    --dfNodeBackgroundColor: #ffffff;
    --dfNodeTextColor: #000000;
    --dfNodeBorderSize: 2px;
    --dfNodeBorderColor: #000000;
    --dfNodeBorderRadius: 4px;
    --dfNodeMinHeight: 40px;
    --dfNodeMinWidth: 160px;
    --dfNodePaddingTop: 15px;
    --dfNodePaddingBottom: 15px;
    --dfNodeBoxShadowHL: 0px;
    --dfNodeBoxShadowVL: 2px;
    --dfNodeBoxShadowBR: 15px;
    --dfNodeBoxShadowS: 2px;
    --dfNodeBoxShadowColor: #000000;
  
    --dfNodeHoverBackgroundColor: #ffffff;
    --dfNodeHoverTextColor: #000000;
    --dfNodeHoverBorderSize: 2px;
    --dfNodeHoverBorderColor: #000000;
    --dfNodeHoverBorderRadius: 4px;
  
    --dfNodeHoverBoxShadowHL: 0px;
    --dfNodeHoverBoxShadowVL: 2px;
    --dfNodeHoverBoxShadowBR: 15px;
    --dfNodeHoverBoxShadowS: 2px;
    --dfNodeHoverBoxShadowColor: #4ea9ff;
  
    --dfNodeSelectedBackgroundColor: #000000;
    --dfNodeSelectedTextColor: #ffffff;
    --dfNodeSelectedBorderSize: 2px;
    --dfNodeSelectedBorderColor: #000000;
    --dfNodeSelectedBorderRadius: 4px;
  
    --dfNodeSelectedBoxShadowHL: 0px;
    --dfNodeSelectedBoxShadowVL: 2px;
    --dfNodeSelectedBoxShadowBR: 15px;
    --dfNodeSelectedBoxShadowS: 2px;
    --dfNodeSelectedBoxShadowColor: #4ea9ff;
  
    --dfInputBackgroundColor: #ffffff;
    --dfInputBorderSize: 2px;
    --dfInputBorderColor: #000000;
    --dfInputBorderRadius: 50px;
    --dfInputLeft: -27px;
    --dfInputHeight: 20px;
    --dfInputWidth: 20px;
  
    --dfInputHoverBackgroundColor: #ffffff;
    --dfInputHoverBorderSize: 2px;
    --dfInputHoverBorderColor: #000000;
    --dfInputHoverBorderRadius: 50px;
  
    --dfOutputBackgroundColor: #ffffff;
    --dfOutputBorderSize: 2px;
    --dfOutputBorderColor: #000000;
    --dfOutputBorderRadius: 50px;
    --dfOutputRight: -3px;
    --dfOutputHeight: 20px;
    --dfOutputWidth: 20px;
  
    --dfOutputHoverBackgroundColor: #ffffff;
    --dfOutputHoverBorderSize: 2px;
    --dfOutputHoverBorderColor: #000000;
    --dfOutputHoverBorderRadius: 50px;
  
    --dfLineWidth: 5px;
    --dfLineColor: #4682b4;
    --dfLineHoverColor: #4682b4;
    --dfLineSelectedColor: #43b993;
  
    --dfRerouteBorderWidth: 2px;
    --dfRerouteBorderColor: #000000;
    --dfRerouteBackgroundColor: #ffffff;
  
    --dfRerouteHoverBorderWidth: 2px;
    --dfRerouteHoverBorderColor: #000000;
    --dfRerouteHoverBackgroundColor: #ffffff;
  
    --dfDeleteDisplay: block;
    --dfDeleteColor: #ffffff;
    --dfDeleteBackgroundColor: #000000;
    --dfDeleteBorderSize: 2px;
    --dfDeleteBorderColor: #ffffff;
    --dfDeleteBorderRadius: 50px;
    --dfDeleteTop: -15px;
  
    --dfDeleteHoverColor: #000000;
    --dfDeleteHoverBackgroundColor: #ffffff;
    --dfDeleteHoverBorderSize: 2px;
    --dfDeleteHoverBorderColor: #000000;
    --dfDeleteHoverBorderRadius: 50px;
  
  }
  
  #drawflow {
    background: var(--dfBackgroundColor);
    background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
    background-image: var(--dfBackgroundImage);
  }
  
  .drawflow .drawflow-node {
    display: var(--dfNodeType);
    background: var(--dfNodeBackgroundColor);
    color: var(--dfNodeTextColor);
    border: var(--dfNodeBorderSize)  solid var(--dfNodeBorderColor);
    border-radius: var(--dfNodeBorderRadius);
    min-height: var(--dfNodeMinHeight);
    width: auto;
    min-width: var(--dfNodeMinWidth);
    padding-top: var(--dfNodePaddingTop);
    padding-bottom: var(--dfNodePaddingBottom);
    -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    box-shadow:  var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
  }
  
  .drawflow .drawflow-node:hover {
    background: var(--dfNodeHoverBackgroundColor);
    color: var(--dfNodeHoverTextColor);
    border: var(--dfNodeHoverBorderSize)  solid var(--dfNodeHoverBorderColor);
    border-radius: var(--dfNodeHoverBorderRadius);
    -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
    box-shadow:  var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
  }
  
  .drawflow .drawflow-node.selected {
    background: var(--dfNodeSelectedBackgroundColor);
    color: var(--dfNodeSelectedTextColor);
    border: var(--dfNodeSelectedBorderSize)  solid var(--dfNodeSelectedBorderColor);
    border-radius: var(--dfNodeSelectedBorderRadius);
    -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
    box-shadow:  var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
  }
  
  .drawflow .drawflow-node .input {
    left: var(--dfInputLeft);
    background: var(--dfInputBackgroundColor);
    border: var(--dfInputBorderSize)  solid var(--dfInputBorderColor);
    border-radius: var(--dfInputBorderRadius);
    height: var(--dfInputHeight);
    width: var(--dfInputWidth);
  }
  
  .drawflow .drawflow-node .input:hover {
    background: var(--dfInputHoverBackgroundColor);
    border: var(--dfInputHoverBorderSize)  solid var(--dfInputHoverBorderColor);
    border-radius: var(--dfInputHoverBorderRadius);
  }
  
  .drawflow .drawflow-node .outputs {
    float: var(--dfNodeTypeFloat);
  }
  
  .drawflow .drawflow-node .output {
    right: var(--dfOutputRight);
    background: var(--dfOutputBackgroundColor);
    border: var(--dfOutputBorderSize)  solid var(--dfOutputBorderColor);
    border-radius: var(--dfOutputBorderRadius);
    height: var(--dfOutputHeight);
    width: var(--dfOutputWidth);
  }
  
  .drawflow .drawflow-node .output:hover {
    background: var(--dfOutputHoverBackgroundColor);
    border: var(--dfOutputHoverBorderSize)  solid var(--dfOutputHoverBorderColor);
    border-radius: var(--dfOutputHoverBorderRadius);
  }
  
  .drawflow .connection .main-path {
    stroke-width: var(--dfLineWidth);
    stroke: var(--dfLineColor);
  }
  
  .drawflow .connection .main-path:hover {
    stroke: var(--dfLineHoverColor);
  }
  
  .drawflow .connection .main-path.selected {
    stroke: var(--dfLineSelectedColor);
  }
  
  .drawflow .connection .point {
    stroke: var(--dfRerouteBorderColor);
    stroke-width: var(--dfRerouteBorderWidth);
    fill: var(--dfRerouteBackgroundColor);
  }
  
  .drawflow .connection .point:hover {
    stroke: var(--dfRerouteHoverBorderColor);
    stroke-width: var(--dfRerouteHoverBorderWidth);
    fill: var(--dfRerouteHoverBackgroundColor);
  }
  
  .drawflow-delete {
    display: var(--dfDeleteDisplay);
    color: var(--dfDeleteColor);
    background: var(--dfDeleteBackgroundColor);
    border: var(--dfDeleteBorderSize) solid var(--dfDeleteBorderColor);
    border-radius: var(--dfDeleteBorderRadius);
  }
  
  .parent-node .drawflow-delete {
    top: var(--dfDeleteTop);
  }
  
  .drawflow-delete:hover {
    color: var(--dfDeleteHoverColor);
    background: var(--dfDeleteHoverBackgroundColor);
    border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
    border-radius: var(--dfDeleteHoverBorderRadius);
  }
  
